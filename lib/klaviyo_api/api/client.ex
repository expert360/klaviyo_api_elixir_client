# NOTE: This file is auto generated by OpenAPI Generator 7.1.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule KlaviyoAPI.Api.Client do
  @moduledoc """
  API calls for all endpoints tagged `Client`.
  """

  alias KlaviyoAPI.Connection
  import KlaviyoAPI.RequestBuilder

  @doc """
  Bulk Create Client Events
  Create new events to track a profile's activity.  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only.  Accepts a maximum of `1000` events per request.<br><br>*Rate limits*:<br>Burst: `10/s`<br>Steady: `150/m`  **Scopes:** `events:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `events_bulk_create_query` (EventsBulkCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec bulk_create_client_events(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.EventsBulkCreateQuery.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def bulk_create_client_events(connection, company_id, revision, events_bulk_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/event-bulk-create/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, events_bulk_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create Client Back In Stock Subscription
  Subscribe a profile to receive back in stock notifications. Check out [our Back in Stock API guide](https://developers.klaviyo.com/en/docs/how_to_set_up_custom_back_in_stock) for more details.  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create subscriptions from server-based applications, please use [POST /api/back-in-stock-subscriptions](https://developers.klaviyo.com/en/reference/create_back_in_stock_subscription).<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `catalogs:write` `profiles:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `client_bis_subscription_create_query` (ClientBisSubscriptionCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_client_back_in_stock_subscription(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.ClientBisSubscriptionCreateQuery.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def create_client_back_in_stock_subscription(connection, company_id, revision, client_bis_subscription_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/back-in-stock-subscriptions/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, client_bis_subscription_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create Client Event
  Create a new event to track a profile's activity.  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create events from server-based applications, please use [POST /api/events](https://developers.klaviyo.com/en/reference/create_event)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `events:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `event_create_query_v2` (EventCreateQueryV2): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_client_event(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.EventCreateQueryV2.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def create_client_event(connection, company_id, revision, event_create_query_v2, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/events/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, event_create_query_v2)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create or Update Client Profile
  Create and update properties about a profile without tracking an associated event.  This endpoint is specifically designed to be called from publicly-browseable, client-side environments only. To create profiles from server applications (e.g. custom server-side scripts / applications), please use [POST /api/profiles](https://developers.klaviyo.com/en/reference/create_profile)<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `profiles:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `onsite_profile_create_query` (OnsiteProfileCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_client_profile(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.OnsiteProfileCreateQuery.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def create_client_profile(connection, company_id, revision, onsite_profile_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/profiles/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, onsite_profile_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create or Update Client Push Token
  Create or update a push token.  This endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)). You must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `push_token_create_query` (PushTokenCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_client_push_token(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.PushTokenCreateQuery.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def create_client_push_token(connection, company_id, revision, push_token_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/push-tokens/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, push_token_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create Client Subscription
  *Rate limits*:<br>Burst: `100/s`<br>Steady: `700/m`  **Scopes:** `subscriptions:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `onsite_subscription_create_query` (OnsiteSubscriptionCreateQuery): Creates a subscription and consent records for Email and or SMS channels based on the provided email and phone_number attributes respectively. One of either email or phone_number must be provided. To create a subscription and consent record for only one channel but still include the other channel as a profile property the consent channel can be provided as a top level attribute and the other channel can be included in the properties object.
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_client_subscription(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.OnsiteSubscriptionCreateQuery.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def create_client_subscription(connection, company_id, revision, onsite_subscription_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/subscriptions/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, onsite_subscription_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false}
    ])
  end

  @doc """
  Unregister Client Push Token
  Unregister a push token.  This endpoint is designed to be called from our mobile SDKs ([iOS](https://github.com/klaviyo/klaviyo-swift-sdk) and [Android](https://github.com/klaviyo/klaviyo-android-sdk)). You must have push notifications enabled to use this endpoint.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `company_id` (String.t): Your Public API Key / Site ID. See [this article](https://help.klaviyo.com/hc/en-us/articles/115005062267) for more details.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `push_token_unregister_query` (PushTokenUnregisterQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec unregister_client_push_token(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.PushTokenUnregisterQuery.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def unregister_client_push_token(connection, company_id, revision, push_token_unregister_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/client/push-token-unregister/")
      |> add_param(:query, :company_id, company_id)
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, push_token_unregister_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end
end
