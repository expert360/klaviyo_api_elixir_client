# NOTE: This file is auto generated by OpenAPI Generator 7.1.0-SNAPSHOT (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule KlaviyoAPI.Api.Coupons do
  @moduledoc """
  API calls for all endpoints tagged `Coupons`.
  """

  alias KlaviyoAPI.Connection
  import KlaviyoAPI.RequestBuilder

  @doc """
  Create Coupon
  Creates a new coupon.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `coupons:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `coupon_create_query` (CouponCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.PostCouponResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_coupon(Tesla.Env.client, String.t, KlaviyoAPI.Model.CouponCreateQuery.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.PostCouponResponse.t} | {:error, Tesla.Env.t}
  def create_coupon(connection, revision, coupon_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/api/coupons/")
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, coupon_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, KlaviyoAPI.Model.PostCouponResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Create Coupon Code
  Synchronously creates a coupon code for the given coupon.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `coupon-codes:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `coupon_code_create_query` (CouponCodeCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.PostCouponCodeResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec create_coupon_code(Tesla.Env.client, String.t, KlaviyoAPI.Model.CouponCodeCreateQuery.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.PostCouponCodeResponse.t} | {:error, Tesla.Env.t}
  def create_coupon_code(connection, revision, coupon_code_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/api/coupon-codes/")
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, coupon_code_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {201, KlaviyoAPI.Model.PostCouponCodeResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Delete Coupon
  Delete the coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `coupons:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The internal id of a Coupon is equivalent to its external id stored within an integration.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delete_coupon(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def delete_coupon(connection, id, revision, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/api/coupons/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Delete Coupon Code
  Deletes a coupon code specified by the given identifier synchronously. If a profile has been assigned to the coupon code, an exception will be raised<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `coupon-codes:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, nil}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec delete_coupon_code(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def delete_coupon_code(connection, id, revision, _opts \\ []) do
    request =
      %{}
      |> method(:delete)
      |> url("/api/coupon-codes/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {204, false},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon
  Get a specific coupon with the given coupon ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupons:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The internal id of a Coupon is equivalent to its external id stored within an integration.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetCouponResponse.t} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def get_coupon(connection, id, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupons/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Code
  Returns a Coupon Code specified by the given identifier.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon-code]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:"fields[coupon]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:include` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeResponseCompoundDocument.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_code(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetCouponCodeResponseCompoundDocument.t} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def get_coupon_code(connection, id, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon-code]" => :query,
      :"fields[coupon]" => :query,
      :include => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-codes/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeResponseCompoundDocument},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Code Bulk Create Job
  Get a coupon code bulk create job with the given job ID.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `job_id` (String.t): ID of the job to retrieve.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon-code-bulk-create-job]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:"fields[coupon-code]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:include` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCompoundDocument.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_code_bulk_create_job(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCompoundDocument.t} | {:error, Tesla.Env.t}
  def get_coupon_code_bulk_create_job(connection, job_id, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon-code-bulk-create-job]" => :query,
      :"fields[coupon-code]" => :query,
      :include => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-code-bulk-create-jobs/#{job_id}/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCompoundDocument},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Code Bulk Create Jobs
  Get all coupon code bulk create jobs.  Returns a maximum of 100 jobs per request.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon-code-bulk-create-job]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:filter` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`status`: `equals`
    - `:"page[cursor]"` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCollectionCompoundDocument.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_code_bulk_create_jobs(Tesla.Env.client, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCollectionCompoundDocument.t} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def get_coupon_code_bulk_create_jobs(connection, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon-code-bulk-create-job]" => :query,
      :filter => :query,
      :"page[cursor]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-code-bulk-create-jobs/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeCreateJobResponseCollectionCompoundDocument},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Code Relationships Coupon
  Gets a list of coupon code relationships associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): 
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"page[cursor]"` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponRelationshipCouponCodesListResponseCollection.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_code_relationships_coupon(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponRelationshipCouponCodesListResponseCollection.t} | {:error, Tesla.Env.t}
  def get_coupon_code_relationships_coupon(connection, id, revision, opts \\ []) do
    optional_params = %{
      :"page[cursor]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupons/#{id}/relationships/coupon-codes/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponRelationshipCouponCodesListResponseCollection},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Codes
  Gets a list of coupon codes associated with a coupon/coupons or a profile/profiles.  A coupon/coupons or a profile/profiles must be provided as required filter params.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon-code]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:"fields[coupon]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:filter` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`
    - `:include` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#relationships
    - `:"page[cursor]"` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeResponseCollectionCompoundDocument.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_codes(Tesla.Env.client, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetCouponCodeResponseCollectionCompoundDocument.t} | {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:error, Tesla.Env.t}
  def get_coupon_codes(connection, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon-code]" => :query,
      :"fields[coupon]" => :query,
      :filter => :query,
      :include => :query,
      :"page[cursor]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-codes/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeResponseCollectionCompoundDocument},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Codes For Coupon
  Gets a list of coupon codes associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupon-codes:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): 
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon-code]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:filter` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#filtering<br>Allowed field(s)/operator(s):<br>`expires_at`: `greater-or-equal`, `greater-than`, `less-or-equal`, `less-than`<br>`status`: `equals`<br>`coupon.id`: `any`, `equals`<br>`profile.id`: `any`, `equals`
    - `:"page[cursor]"` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeResponseCollection.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_codes_for_coupon(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponCodeResponseCollection.t} | {:error, Tesla.Env.t}
  def get_coupon_codes_for_coupon(connection, id, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon-code]" => :query,
      :filter => :query,
      :"page[cursor]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupons/#{id}/coupon-codes/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeResponseCollection},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon For Coupon Code
  Gets a list of coupon codes associated with the given coupon id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupons:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): 
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponResponseCollection.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_for_coupon_code(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponResponseCollection.t} | {:error, Tesla.Env.t}
  def get_coupon_for_coupon_code(connection, id, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-codes/#{id}/coupon/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponResponseCollection},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupon Relationships Coupon Codes
  Gets the coupon relationship associated with the given coupon code id<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupons:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): 
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponCodeRelationshipCouponResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupon_relationships_coupon_codes(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponCodeRelationshipCouponResponse.t} | {:error, Tesla.Env.t}
  def get_coupon_relationships_coupon_codes(connection, id, revision, _opts \\ []) do
    request =
      %{}
      |> method(:get)
      |> url("/api/coupon-codes/#{id}/relationships/coupon/")
      |> add_param(:headers, :revision, revision)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponCodeRelationshipCouponResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Get Coupons
  Get all coupons in an account.  To learn more, see our [Coupons API guide](https://developers.klaviyo.com/en/docs/use_klaviyos_coupons_api).<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupons:read`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `opts` (keyword): Optional parameters
    - `:"fields[coupon]"` ([String.t]): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#sparse-fieldsets
    - `:"page[cursor]"` (String.t): For more information please visit https://developers.klaviyo.com/en/v2024-02-15/reference/api-overview#pagination

  ### Returns

  - `{:ok, KlaviyoAPI.Model.GetCouponResponseCollection.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_coupons(Tesla.Env.client, String.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.GetCouponResponseCollection.t} | {:error, Tesla.Env.t}
  def get_coupons(connection, revision, opts \\ []) do
    optional_params = %{
      :"fields[coupon]" => :query,
      :"page[cursor]" => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/api/coupons/")
      |> add_param(:headers, :revision, revision)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.GetCouponResponseCollection},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Spawn Coupon Code Bulk Create Job
  Create a coupon-code-bulk-create-job to bulk create a list of coupon codes.  Max number of jobs queued at once we allow for is 100.<br><br>*Rate limits*:<br>Burst: `75/s`<br>Steady: `700/m`  **Scopes:** `coupon-codes:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `coupon_code_create_job_create_query` (CouponCodeCreateJobCreateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.PostCouponCodeCreateJobResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec spawn_coupon_code_bulk_create_job(Tesla.Env.client, String.t, KlaviyoAPI.Model.CouponCodeCreateJobCreateQuery.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.PostCouponCodeCreateJobResponse.t} | {:error, Tesla.Env.t}
  def spawn_coupon_code_bulk_create_job(connection, revision, coupon_code_create_job_create_query, _opts \\ []) do
    request =
      %{}
      |> method(:post)
      |> url("/api/coupon-code-bulk-create-jobs/")
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, coupon_code_create_job_create_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {202, KlaviyoAPI.Model.PostCouponCodeCreateJobResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Update Coupon
  *Rate limits*:<br>Burst: `3/s`<br>Steady: `60/m`  **Scopes:** `coupons:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The internal id of a Coupon is equivalent to its external id stored within an integration.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `coupon_update_query` (CouponUpdateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.PatchCouponResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec update_coupon(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.CouponUpdateQuery.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.PatchCouponResponse.t} | {:error, Tesla.Env.t}
  def update_coupon(connection, id, revision, coupon_update_query, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/api/coupons/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, coupon_update_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.PatchCouponResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end

  @doc """
  Update Coupon Code
  Updates a coupon code specified by the given identifier synchronously. We allow updating the 'status' and 'expires_at' of coupon codes.<br><br>*Rate limits*:<br>Burst: `350/s`<br>Steady: `3500/m`  **Scopes:** `coupon-codes:write`

  ### Parameters

  - `connection` (KlaviyoAPI.Connection): Connection to server
  - `id` (String.t): The id of a coupon code is a combination of its unique code and the id of the coupon it is associated with.
  - `revision` (String.t): API endpoint revision (format: YYYY-MM-DD[.suffix])
  - `coupon_code_update_query` (CouponCodeUpdateQuery): 
  - `opts` (keyword): Optional parameters

  ### Returns

  - `{:ok, KlaviyoAPI.Model.PatchCouponCodeResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec update_coupon_code(Tesla.Env.client, String.t, String.t, KlaviyoAPI.Model.CouponCodeUpdateQuery.t, keyword()) :: {:ok, KlaviyoAPI.Model.GetAccounts4XxResponse.t} | {:ok, KlaviyoAPI.Model.PatchCouponCodeResponse.t} | {:error, Tesla.Env.t}
  def update_coupon_code(connection, id, revision, coupon_code_update_query, _opts \\ []) do
    request =
      %{}
      |> method(:patch)
      |> url("/api/coupon-codes/#{id}/")
      |> add_param(:headers, :revision, revision)
      |> add_param(:body, :body, coupon_code_update_query)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, KlaviyoAPI.Model.PatchCouponCodeResponse},
      {"4XX", KlaviyoAPI.Model.GetAccounts4XxResponse},
      {"5XX", KlaviyoAPI.Model.GetAccounts4XxResponse}
    ])
  end
end
